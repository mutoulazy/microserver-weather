// buildscript 代码块中脚本优先执行
buildscript {

    // ext 用于定义动态属性
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }

    // 使用了Maven的中央仓库及Spring自己的仓库（也可以指定其他仓库）
    repositories {
        // mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    // 依赖关系
    dependencies {

        // classpath 声明了在执行其余的脚本时，ClassLoader 可以使用这些依赖项
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


allprojects {
    group = 'com.example.spring.cloud.weather'
    version = '1.0.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    dependencies{
        compile('org.springframework.boot:spring-boot-starter-web')
        //这里如果配置了jar包依赖，所有子项目共享，使用了gradle的依赖传递特性。
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
}